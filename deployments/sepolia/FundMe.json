{
  "address": "0xC2B8D161d214c247661Fa3B0c2b2f28304b43646",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x863f6de5fa8443f13083a2c78c767d7d14fd766ee00e1099af569c260fa40a0e",
  "receipt": {
    "to": null,
    "from": "0xAb49e881b4c549CfD6306B538172e57Ef6857bD9",
    "contractAddress": "0xC2B8D161d214c247661Fa3B0c2b2f28304b43646",
    "transactionIndex": 43,
    "gasUsed": "960480",
    "logsBloom": "0x
    "blockHash": "0x7555c43519b1ddb3016588dd7fe0b2c2f60aca055ed3fe6cc8d67cfe1ff41215",
    "transactionHash": "0x863f6de5fa8443f13083a2c78c767d7d14fd766ee00e1099af569c260fa40a0e",
    "logs": [],
    "blockNumber": 5575854,
    "cumulativeGasUsed": "7820606",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "1b08d6282b9575435732f313cab05c53",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get  funds from users\\n// Withdraw funds\\n// Set a minimum funding value in USD\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConvertor.sol\\\";\\n\\n// the const and the immutable are really great gas savers\\n// we use const when we deal with global variables, but we use immutable vars when we deal with vars inside the function or constructors\\n\\n// custom error\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n    address[] public funders;\\n\\n    address public owner;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18; // 1 * 10 ** 18 // it is a name convention to assigne names like this in capital letters and underscores to constants variable declaration\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    // it is a name convention to use i_var name with immutable\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    //we want to send an amount fund amount in USD\\n    //1. How do we send eth to this contract?\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough\\\"\\n        ); //1e18 == 1 * 10 ** 18 =100\\n\\n        // 18 decimals\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n\\n        //what is reverting?\\n        //undo any action before, and send remaining gas back\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        /*starting index, ending index, step amount*/\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        funders = new address[](0);\\n        //actually withdraw the funds\\n\\n        //transfer\\n        payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        require(sendSuccess, \\\"send failed\\\");\\n        // this is the most favourabile approach that is used to send native Etherium\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"call failed\\\");\\n    }\\n\\n    // this modifier is responsible for check if the require is applicable and then  deploying the contract withdraw after this\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender == owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // what happens if some one sends this contract ETH without calling the fund function\\n    // receive\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    // callback\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x38e83e14024b444bd07291698b3328344cd5346acf9a189bd928c61c65e4c17c\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xe56b7b26865ef29c88cd38082ff18f175c3e27334e780d5d8a5ddd81ad70da92\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001103380380620011038339818101604052810190620000379190620000d7565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600081519050620000d18162000142565b92915050565b600060208284031215620000f057620000ef6200013d565b5b60006200010084828501620000c0565b91505092915050565b600062000116826200011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014d8162000109565b81146200015957600080fd5b50565b610f97806200016c6000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610883565b6105e7565b6040516100d89190610abc565b60405180910390f35b3480156100ed57600080fd5b506100f66105ff565b6040516101039190610abc565b60405180910390f35b34801561011857600080fd5b5061012161060c565b60405161012e9190610a41565b60405180910390f35b34801561014357600080fd5b5061014c610632565b6040516101599190610a26565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108b0565b610658565b6040516101a09190610a26565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069790919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610a5c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610af3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561036b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104165760006001828154811061039157610390610e24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040e90610d7d565b91505061036e565b50600067ffffffffffffffff81111561043257610431610e53565b5b6040519080825280602002602001820160405280156104605781602001602082028036833780820191505090505b5060019080519060200190610476929190610773565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104bd573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610a7c565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161055d90610a11565b60006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90610a9c565b60405180910390fd5b5050565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a3836106d3565b90506000670de0b6b3a764000085836106bc9190610c91565b6106c69190610b49565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071c57600080fd5b505afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906108dd565b5050509150506402540be4008161076b9190610b7a565b915050919050565b8280548282559060005260206000209081019282156107ec579160200282015b828111156107eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610793565b5b5090506107f991906107fd565b5090565b5b808211156108165760008160009055506001016107fe565b5090565b60008135905061082981610f05565b92915050565b60008151905061083e81610f1c565b92915050565b60008135905061085381610f33565b92915050565b60008151905061086881610f33565b92915050565b60008151905061087d81610f4a565b92915050565b60006020828403121561089957610898610e82565b5b60006108a78482850161081a565b91505092915050565b6000602082840312156108c6576108c5610e82565b5b60006108d484828501610844565b91505092915050565b600080600080600060a086880312156108f9576108f8610e82565b5b60006109078882890161086e565b95505060206109188882890161082f565b945050604061092988828901610859565b935050606061093a88828901610859565b925050608061094b8882890161086e565b9150509295509295909350565b61096181610ceb565b82525050565b61097081610d47565b82525050565b6000610983601283610ae2565b915061098e82610e87565b602082019050919050565b60006109a6600b83610ae2565b91506109b182610eb0565b602082019050919050565b60006109c9600b83610ae2565b91506109d482610ed9565b602082019050919050565b60006109ec600083610ad7565b91506109f782610f02565b600082019050919050565b610a0b81610d27565b82525050565b6000610a1c826109df565b9150819050919050565b6000602082019050610a3b6000830184610958565b92915050565b6000602082019050610a566000830184610967565b92915050565b60006020820190508181036000830152610a7581610976565b9050919050565b60006020820190508181036000830152610a9581610999565b9050919050565b60006020820190508181036000830152610ab5816109bc565b9050919050565b6000602082019050610ad16000830184610a02565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610afe82610d27565b9150610b0983610d27565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b3e57610b3d610dc6565b5b828201905092915050565b6000610b5482610d27565b9150610b5f83610d27565b925082610b6f57610b6e610df5565b5b828204905092915050565b6000610b8582610cfd565b9150610b9083610cfd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610bcf57610bce610dc6565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c0c57610c0b610dc6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c4957610c48610dc6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c8657610c85610dc6565b5b828202905092915050565b6000610c9c82610d27565b9150610ca783610d27565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610dc6565b5b828202905092915050565b6000610cf682610d07565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d5282610d59565b9050919050565b6000610d6482610d6b565b9050919050565b6000610d7682610d07565b9050919050565b6000610d8882610d27565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dbb57610dba610dc6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f73656e64206661696c6564000000000000000000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610f0e81610ceb565b8114610f1957600080fd5b50565b610f2581610cfd565b8114610f3057600080fd5b50565b610f3c81610d27565b8114610f4757600080fd5b50565b610f5381610d31565b8114610f5e57600080fd5b5056fea26469706673582212208e2ded8651978b6d452d22f673c182ec885eee74d48880d1675656a246cde2af64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c5780638da5cb5b14610137578063b60d428814610162578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e3565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610883565b6105e7565b6040516100d89190610abc565b60405180910390f35b3480156100ed57600080fd5b506100f66105ff565b6040516101039190610abc565b60405180910390f35b34801561011857600080fd5b5061012161060c565b60405161012e9190610a41565b60405180910390f35b34801561014357600080fd5b5061014c610632565b6040516101599190610a26565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e91906108b0565b610658565b6040516101a09190610a26565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461069790919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610a5c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610af3565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561036b576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104165760006001828154811061039157610390610e24565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040e90610d7d565b91505061036e565b50600067ffffffffffffffff81111561043257610431610e53565b5b6040519080825280602002602001820160405280156104605781602001602082028036833780820191505090505b5060019080519060200190610476929190610773565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104bd573d6000803e3d6000fd5b5060003373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050905080610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e90610a7c565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161055d90610a11565b60006040518083038185875af1925050503d806000811461059a576040519150601f19603f3d011682016040523d82523d6000602084013e61059f565b606091505b50509050806105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90610a9c565b60405180910390fd5b5050565b60006020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061066857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806106a3836106d3565b90506000670de0b6b3a764000085836106bc9190610c91565b6106c69190610b49565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561071c57600080fd5b505afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906108dd565b5050509150506402540be4008161076b9190610b7a565b915050919050565b8280548282559060005260206000209081019282156107ec579160200282015b828111156107eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610793565b5b5090506107f991906107fd565b5090565b5b808211156108165760008160009055506001016107fe565b5090565b60008135905061082981610f05565b92915050565b60008151905061083e81610f1c565b92915050565b60008135905061085381610f33565b92915050565b60008151905061086881610f33565b92915050565b60008151905061087d81610f4a565b92915050565b60006020828403121561089957610898610e82565b5b60006108a78482850161081a565b91505092915050565b6000602082840312156108c6576108c5610e82565b5b60006108d484828501610844565b91505092915050565b600080600080600060a086880312156108f9576108f8610e82565b5b60006109078882890161086e565b95505060206109188882890161082f565b945050604061092988828901610859565b935050606061093a88828901610859565b925050608061094b8882890161086e565b9150509295509295909350565b61096181610ceb565b82525050565b61097081610d47565b82525050565b6000610983601283610ae2565b915061098e82610e87565b602082019050919050565b60006109a6600b83610ae2565b91506109b182610eb0565b602082019050919050565b60006109c9600b83610ae2565b91506109d482610ed9565b602082019050919050565b60006109ec600083610ad7565b91506109f782610f02565b600082019050919050565b610a0b81610d27565b82525050565b6000610a1c826109df565b9150819050919050565b6000602082019050610a3b6000830184610958565b92915050565b6000602082019050610a566000830184610967565b92915050565b60006020820190508181036000830152610a7581610976565b9050919050565b60006020820190508181036000830152610a9581610999565b9050919050565b60006020820190508181036000830152610ab5816109bc565b9050919050565b6000602082019050610ad16000830184610a02565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610afe82610d27565b9150610b0983610d27565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b3e57610b3d610dc6565b5b828201905092915050565b6000610b5482610d27565b9150610b5f83610d27565b925082610b6f57610b6e610df5565b5b828204905092915050565b6000610b8582610cfd565b9150610b9083610cfd565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610bcf57610bce610dc6565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610c0c57610c0b610dc6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c4957610c48610dc6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c8657610c85610dc6565b5b828202905092915050565b6000610c9c82610d27565b9150610ca783610d27565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ce057610cdf610dc6565b5b828202905092915050565b6000610cf682610d07565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d5282610d59565b9050919050565b6000610d6482610d6b565b9050919050565b6000610d7682610d07565b9050919050565b6000610d8882610d27565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610dbb57610dba610dc6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f73656e64206661696c6564000000000000000000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b610f0e81610ceb565b8114610f1957600080fd5b50565b610f2581610cfd565b8114610f3057600080fd5b50565b610f3c81610d27565b8114610f4757600080fd5b50565b610f5381610d31565b8114610f5e57600080fd5b5056fea26469706673582212208e2ded8651978b6d452d22f673c182ec885eee74d48880d1675656a246cde2af64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 321,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 326,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 334,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}